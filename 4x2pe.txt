//Design Code
module mux21(output out,input s1,in0,in1);
  assign out=((~s1)&(in0)|(s1)&(in1));
endmodule


module pe_4x2(output wire [1:0]out,output wire valid, input [3:0]in );
  wire out2,o1,o2;
  mux21 a1(out[1],in[2],in[3],1);
  mux21 a2(out2,in[2],in[1],0);
  mux21 a3(out[0],in[3],out2,1);
  mux21 a4(o1,in[3],in[2],1);
  mux21 a5(o2,in[1],in[0],1);
  mux21 a6(valid,o1,o2,1);
endmodule

//Test Bench Code
module test();
  wire [1:0]out;
  wire valid;
  reg [3:0]in;
  pe_4x2 dut(out,valid,in);
  integer i;
  initial
    begin
      for(i=0;i<16;i=i+1)
        begin
          in=i;
          #10;
        end
    end
  initial
    begin
      $monitor("in=%b,out=%b,valid=%b",in,out,valid);
    end
  initial
    begin
      $dumpfile("test.vcd");
      $dumpvars(1);
    end
endmodule
